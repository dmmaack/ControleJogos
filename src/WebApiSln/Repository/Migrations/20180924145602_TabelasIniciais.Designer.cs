// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository.Entity;

namespace Repository.Migrations
{
    [DbContext(typeof(WebApiDbContext))]
    [Migration("20180924145602_TabelasIniciais")]
    partial class TabelasIniciais
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Repository.Entity.AmigoEntity", b =>
                {
                    b.Property<int>("AmigoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("DDD")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("Localidade")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(300);

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(9);

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<bool>("Whats");

                    b.HasKey("AmigoId");

                    b.ToTable("Amigo");
                });

            modelBuilder.Entity("Repository.Entity.ConsoleEntity", b =>
                {
                    b.Property<int>("ConsoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Energia")
                        .IsRequired()
                        .HasMaxLength(6);

                    b.Property<int>("FabricanteId");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("QtdControles");

                    b.HasKey("ConsoleId");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Console");
                });

            modelBuilder.Entity("Repository.Entity.EmprestimoEntity", b =>
                {
                    b.Property<int>("EmprestimoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AmigoId");

                    b.Property<DateTime>("DtDevolucao");

                    b.Property<DateTime>("DtEmprestimo");

                    b.Property<int>("JogoId");

                    b.Property<string>("Observacao")
                        .IsRequired();

                    b.HasKey("EmprestimoId");

                    b.HasIndex("AmigoId");

                    b.HasIndex("JogoId")
                        .IsUnique();

                    b.ToTable("Emprestimo");
                });

            modelBuilder.Entity("Repository.Entity.FabricanteEntity", b =>
                {
                    b.Property<int>("FabricanteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImagemLogo")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("TipoFabricante");

                    b.HasKey("FabricanteId");

                    b.ToTable("FabricanteJogos");
                });

            modelBuilder.Entity("Repository.Entity.JogoEntity", b =>
                {
                    b.Property<int>("JogoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClassificacaoEtaria")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<int>("ConsoleId");

                    b.Property<int>("FabricanteId");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<int>("GeneroId");

                    b.Property<string>("Idioma")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("LinkVideo")
                        .IsRequired()
                        .HasMaxLength(8);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60);

                    b.Property<int>("NumJogadores");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasMaxLength(8000);

                    b.HasKey("JogoId");

                    b.HasIndex("ConsoleId");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Jogo");
                });

            modelBuilder.Entity("Repository.Entity.ConsoleEntity", b =>
                {
                    b.HasOne("Repository.Entity.FabricanteEntity", "FabricanteConsole")
                        .WithMany("Consoles")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Repository.Entity.EmprestimoEntity", b =>
                {
                    b.HasOne("Repository.Entity.AmigoEntity", "Amigo")
                        .WithMany("Emprestimos")
                        .HasForeignKey("AmigoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Repository.Entity.JogoEntity", "Jogo")
                        .WithOne("Emprestimo")
                        .HasForeignKey("Repository.Entity.EmprestimoEntity", "JogoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Repository.Entity.JogoEntity", b =>
                {
                    b.HasOne("Repository.Entity.ConsoleEntity", "Console")
                        .WithMany("Jogos")
                        .HasForeignKey("ConsoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Repository.Entity.FabricanteEntity", "FabricanteJogo")
                        .WithMany("Jogos")
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
